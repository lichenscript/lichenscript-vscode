{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "LichenScript",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#chars"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#builtin-type"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#numeric"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.lichenscript",
				"match": "\\b(this|as)\\b"
			},{
				"name": "keyword.control.lichenscript",
				"match": "\\b(if|else|while|for|return|match|case|let|const|break|continue)\\b"
			}, {
				"name": "support.function.lichenscript",
				"match": "\\b(function)\\b"
			}, {
				"name": "storage.modifier.import.lichenscript",
				"match": "\\b(import|from)\\b"
			}, {
				"name": "support.class.lichenscript",
				"match": "\\b(class|enum|interface)\\b"
			}, {
				"name": "storage.modifier.lichenscript",
				"match": "\\b(public|internal|private|protected|static|override|virtual|extends|implements|declare)\\b"
			}]
		},
		"builtin-type": {
			"patterns": [
				{
					"name": "entity.name.type.lichenscript",
					"match": "\\b(i32|i64|f32|f64|boolean|unit|string|char|any)\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.block.documentation.lichenscript",
					"begin": "/\\*\\*(?!/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.lichenscript"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.lichenscript"
						}
					},
					"patterns": [
						{
							"include": "#docblock"
						}
					]
				},
				{
					"name": "comment.block.lichenscript",
					"begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.lichenscript"
						},
						"2": {
							"name": "storage.type.internaldeclaration.lichenscript"
						},
						"3": {
							"name": "punctuation.decorator.internaldeclaration.lichenscript"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.lichenscript"
						}
					}
				},
				{
					"begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.lichenscript"
						},
						"2": {
							"name": "comment.line.double-slash.lichenscript"
						},
						"3": {
							"name": "punctuation.definition.comment.lichenscript"
						},
						"4": {
							"name": "storage.type.internaldeclaration.lichenscript"
						},
						"5": {
							"name": "punctuation.decorator.internaldeclaration.lichenscript"
						}
					},
					"end": "(?=$)",
					"contentName": "comment.line.double-slash.lichenscript"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.lichenscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.lichenscript",
					"match": "\\\\."
				}
			]
		},
		"chars": {
			"name": "constant.character.lichenscript",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.lichenscript",
					"match": "\\\\."
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"name": "variable.name.lichenscript",
					"match": "[a-zA-Z_$][a-zA-Z0-9_$]*"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric.lichenscript",
					"match": "(\\+|-)?0x[ABCDEF1234567890]+L?\\b"
				},
				{
					"name": "constant.numeric.lichenscript",
					"match": "(\\+|-)?0[12345670]+L?\\b"
				},
				{
					"name": "constant.numeric.lichenscript\\b",
					"match": "(\\+|\\-)?\\.\\d+(L|f)?\\b"
				},
				{
					"name": "constant.numeric.lichenscript\\b",
					"match": "(\\+|\\-)?\\d(\\d|\\.)+(L|f)?\\b"
				}
			]
		}
	},
	"scopeName": "source.lichenscript"
}